//===== rAthena Script =======================================
//= Ragnarok Event v1
//===============  by: =============================
//= pajodex
//===== Current Version: =====================================
//= 1.1
//===== Compatible With: =====================================
//= rAthena Project (pajodex)
//===== Description: =========================================
/*
Ragnarok Event v1
		
	Battleground script that runs OnClockxxxx time on server.
An npc will appear at prontera for registration. After some time
RegistrationNPC will disappear. All registered players will
be divided into 2 teams.

	Players have to eliminate the enemy to gain points. Team
with the most points accumulated wins.

	* disclaimer * this runs like the War Over Rune but it is
my own version. Since this is free, i did not add any special
features. 

 
	Enjoy!

*/
//=====******** Note ********=================================
//= if you find bugs or problem, please do tell DM me at
//= Discord (pajodex#1328) or rAthena (pajodex) 
//= open for suggestions
//===== Additional Comments: =================================
/* 	
	1.0 - Initial release
*/
//=============================================================

-	script	#RagnaEvent_Reg_Announce	-1,{
OnClock0000:
OnClock0300:
OnClock0600:
OnClock0900:
OnClock1200:
OnClock1500:
OnClock1800:
OnClock2100:
	if($@ragnarok_event_start != 0) end;
	$@ragnarok_event_start = 1;
	.countTimer = 0;
	announce "[ Ragnarok Event ] : Registration will start in 3 mins.",0;
	sleep 60000;
	announce "[ Ragnarok Event ] : Registration will start in 2 mins.",0;
	sleep 60000;
	announce "[ Ragnarok Event ] : Registration will start in 1 min.",0;
	sleep 60000;
	announce "[ Ragnarok Event ] : You may now proceed to prontera if you want to join.",0;
	enablenpc "ragnaregister";
	sleep 5000;
	announce "[ Ragnarok Event ] : Registration ends in "+.RegistrationTime+" mins.",0;
	initnpctimer;
	end;
	
OnTimer30000:
	if(.countTimer == .RegistrationTime) {
		mapannounce "prontera", "30 seconds til' registration ends", bc_blue;
		sleep 2000;	
	}
	mapannounce "prontera", "There are currently "+getarraysize($@ragwar_joined_players)+" players in the queue.", bc_blue;
	end;
	
OnTimer60000:
	.countTimer++;
	if(.countTimer == .RegistrationTime - 1)
		announce "[ Ragnarok Event ] : Registration ends in 1 min.",0;
	if(.countTimer == .RegistrationTime - 2)
		announce "[ Ragnarok Event ] : Registration ends in 2 min.",0;
	if(.countTimer == .RegistrationTime) {
		stopnpctimer;
		.countTimer = 0;
		disablenpc "ragnaregister";
		announce "[ Ragnarok Event ] : Registration has ended.",0;
		sleep 5000;
		if(getarraysize($@ragwar_joined_players) < 2) {
			announce "[ Ragnarok Event ] : Too few players registered.",0;
			sleep 5000;
			announce "[ Ragnarok Event ] : Terminating event.",0;
			$@ragnarok_event_start = 0;
			end;
			}
		announce "[ Ragnarok Event ] : Ragnarok Event will start in a few moment.",0;
		donpcevent "#ragna_main::OnStart";
	}
	setnpctimer 0;
	end;
	
OnPCLogoutEvent:
	if($@ragnarok_event_start && ragWarEvnt) {
		ragWarEvnt = 0;
		mapannounce "prontera", strcharinfo(0)+" has left the 'Ragnarok Event' queue.", bc_blue;
		sleep2 2000;
		mapannounce "prontera", "There are currently "+getarraysize($@ragwar_joined_players)+" players in the queue.", bc_blue;
		for(.@i=0; .@i < getarraysize($@ragwar_joined_players); .@i++) {
			if ($@ragwar_joined_players[.@i] == getcharid(3))
				deletearray $@ragwar_joined_players[.@i],1;
			}
	}
	end;

OnInit:
	// Registration time
	.RegistrationTime = 5;
	
	// Duration of the event
	$@rWarDuration = 10;
	
	//Don't touch these
	disablenpc "ragnaregister";
	setwall "prt_are01", 210, 151, 4, 4, 0, "RWarWall#1";
	setwall "prt_are01", 89, 151, 4, 4, 0, "RWarWall#2";
	query_sql("UPDATE `char_reg_num` SET `value` = '0' WHERE `key` ='ragWarEvnt'");
		addrid(0);
		ragWarEvnt = 0;
	end;
}

prontera,150,184,0	script	Ragnarok Registration::ragnaregister	100,{
	if(ragWarEvnt) {
		mes "You are already in the queue.";
		next;
		mes "Do you want to exit the queue?";
			if(select("Yes:No") == 2) close;
				mapannounce "prontera", strcharinfo(0)+" has left the 'Ragnarok Event' queue.", bc_blue;
				sleep2 2000;
				mapannounce "prontera", "There are currently "+getarraysize($@ragwar_joined_players)+" players in the queue.", bc_blue;
				for(.@i=0; .@i < getarraysize($@ragwar_joined_players); .@i++) {
					if ($@ragwar_joined_players[.@i] == getcharid(3))
						deletearray $@ragwar_joined_players[.@i],1;
				}
	} 
	else {
	mes "Do you want to participate in 'Ragnarok Event'?";
		if(select("Yes:No") == 2) close;
			next;
			ragWarEvnt = 1;	
			set $@ragwar_joined_players[getarraysize($@ragwar_joined_players)], getcharid(3);
			mes "You have successfully joined the queue";
			mapannounce "prontera", strcharinfo(0)+" has joined the 'Ragnarok Event' queue.", bc_blue;
			close;
	}
	end;
}

prt_are01	mapflag	battleground	2

-	script	#ragna_main	-1,{
if($@ragnarok_event_start != 0) end;
	
OnStart:
	mapwarp "prt_are01","prontera",150,180,0;
	set .@player_per_team, getarraysize($@ragwar_joined_players) / 2;
	sleep 5000;
	announce "[ Ragnarok Event ] : Good luck to all", 0;
	$@rEBGRedTeam = bg_create("prt_are01",251,149);
	$@rEBGBluTeam = bg_create("prt_are01",47,149);
	for(.@i = 0; .@i<getarraysize($@ragwar_joined_players); .@i++) {
		if (attachrid($@ragwar_joined_players[.@i]) == 1)
			{
			if (getarraysize($@rE_RedTeam) < .@player_per_team) {
				$@rE_RedTeam[getarraysize($@rE_RedTeam)] = $@ragwar_joined_players[.@i];
				bg_join($@rEBGRedTeam);
			}
			else if (getarraysize($@rE_BlueTeam) < .@player_per_team) {
				$@rE_BlueTeam[getarraysize($@rE_BlueTeam)] = $@ragwar_joined_players[.@i];
				bg_join($@rEBGBluTeam);
			}
			else {
				if(rand(0,1)) {
					$@rE_RedTeam[getarraysize($@rE_RedTeam)] = $@ragwar_joined_players[.@i];
					bg_join($@rEBGRedTeam);
				}
				else {
					$@rE_BlueTeam[getarraysize($@rE_BlueTeam)] = $@ragwar_joined_players[.@i];
					bg_join($@rEBGBluTeam);
				}
			}
		}
	}
	deletearray $@ragwar_joined_players[0], getarraysize($@ragwar_joined_players) ;
	donpcevent strnpcinfo(3)+"::OnGame";
	end;
	
OnGame:
	mapannounce "prt_are01", "Kill as much enemy as you can to earn points.", bc_blue;
	sleep 2000;
	mapannounce "prt_are01", "Team who gains most points until event ends wins.", bc_blue;
	sleep 2000;
	mapannounce "prt_are01", "'Ragnarok Event' has started.", bc_blue;
	sleep 1000;
	pvpon "prt_are01";
	initnpctimer;
	.duration = $@rWarDuration;
	addrid(5, 0, "prt_are01");
	if(getcharid(3) == $@rE_RedTeam)
		warp "prt_are01", 200, 150;
	else
		warp "prt_are01", 100, 150;
	.countTimer = 0;
	end;
	
	
OnTimer60000:
	if(.countTimer == .duration)
		goto OnReward;
	.countTimer++;
	setnpctimer 0;
	end;
	
OnPCKillEvent:
	if(strcharinfo(3) == "prt_are01" && $@ragnarok_event_start) {
		for(.@i=0;.@i<getarraysize($@rE_RedTeam);.@i++)
		if(getcharid(3) == $@rE_RedTeam[.@i])
			.redTeamScore++;
		else
			.blueTeamScore++;
		bg_updatescore "prt_are01", .blueTeamScore, .redTeamScore;
	}
	end;
	
	
OnPCDieEvent:
	if(strcharinfo(3) == "prt_are01" && $@ragnarok_event_start)
		addtimer 5000, strnpcinfo(3)+"::OnFullRecov";
	end;
	
OnFullRecov:
	repairall;
	percentheal 100, 100;
	if(getcharid(3) == $@rE_RedTeam)
		warp "prt_are01", 200, 150;
	else
		warp "prt_are01", 100, 150;
	end;
	
OnReward:
	stopnpctimer;
	if(.redTeamScore == .blueTeamScore) {
		announce "[ Ragnarok Event ] It's a Draw with a score of " + .redTeamScore + " to " + .blueTeamScore + "! Congratulations everybody!",bc_all,0xC3FF00;
		for(.@i = 0; .@i<getarraysize($@rE_RedTeam); .@i++) {
			if(attachrid($@rE_RedTeam[.@i])) {
				bg_leave;
				ragWarEvnt = 0;
				getitem 7773, 5;
			}
		}
		for(.@i = 0; .@i<getarraysize($@rE_BlueTeam); .@i++) {
			if(attachrid($@rE_BlueTeam[.@i])) {
				bg_leave;
				ragWarEvnt = 0;
				getitem 7773, 5;
			}
		}
	}
	else if (.blueTeamScore > .redTeamScore) {
		announce "[ Ragnarok Event ] Team A wins the  Ragnarok Event  with a score of " + .blueTeamScore + " to " + .redTeamScore + "! Congratulations!",bc_all,0xC3FF00;
		for(.@i = 0; .@i<getarraysize($@rE_BlueTeam); .@i++) {
			if(attachrid($@rE_BlueTeam[.@i])) {
				bg_leave;
				ragWarEvnt = 0;
				getitem 7773, 10;
			}
		}
		for(.@i = 0; .@i<getarraysize($@rE_RedTeam); .@i++) {
			if(attachrid($@rE_RedTeam[.@i])) {
				bg_leave;
				ragWarEvnt = 0;
				getitem 7773, 5;
			}
		}
	}
	else
	{
		announce "[ Ragnarok Event ] Team B wins the  Ragnarok Event  with a score of " + .redTeamScore + " to " + .blueTeamScore + "! Congratulations!",bc_all,0xC3FF00;
		for(.@i = 0; .@i<getarraysize($@rE_RedTeam); .@i++) {
			if(attachrid($@rE_RedTeam[.@i])) {
				bg_leave;
				ragWarEvnt = 0;
				getitem 7773, 10;
			}
		}
		for(.@i =0; .@i<getarraysize($@rE_BlueTeam); .@i++) {
			if(attachrid($@rE_BlueTeam[.@i])) {
				bg_leave;
				ragWarEvnt = 0;
				getitem 7773, 5;
			}
		}
	}
	bg_updatescore "prt_are01", 0, 0;
	bg_destroy($@rEBGRedTeam);
	bg_destroy($@rEBGBluTeam);
	.countTimer = .redTeamScore = .blueTeamScore = 0;
	deletearray $@rE_RedTeam[0], getarraysize($@rE_RedTeam) ;
	deletearray $@rE_BlueTeam[0], getarraysize($@rE_BlueTeam) ;
	sleep 1000;
	mapwarp "prt_are01","prontera",150,180,0;
	set $@ragnarok_event_start, 0;
	end;
}